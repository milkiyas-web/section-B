Since i haven't submitted on the 17th and 18th because i was sick this commit includes 3 methods of strings including one for today.

The first method is isupper() this is a python string method that can be called and returns a boolean. True if the variable called on contains all uppercase English letters and False if it doesn't.

The next method is upper() this is another string method. This will change all the letters to uppercase.

The third method is called count(). when ever count is called on a string it expects a value/string/letter to be passed in it and it will return how many of that value appears in the string we called it on

I have tried to see string concatenation using + sign this method concatenates two strings and forms or returns another string.

I have provide all the examples in strings.py file.

###############################################################################

20/03/2025

Today's string method is what is called slicing. slicing helps us cut a part of the string and returns it based on the indicies we passed to it. for example:
string[0:2] slices the "string" variable which holds a string starting from the value at the 0 index upto the second index but not including the value at the second index.

As usual i have provided an example in the strings.py file.

################################################################################
Today's method is strip()

it Removes leading and trailing whitespace from a string. as shown in example strings.py. one very useful function of this strings method is when taking inputs from the user and we dont want any traling spaces, we use .strip().

###############################################################################3

Today's string method is split()

split in pyton changes a given string in to a list. by passing whatever we want in the parenthesis we can split it based on space or any value. for example: string.split() splirts the string based on spaces.this will internally remove any traling white spaces. additional examples can be found in strings.py

Thanks,
Milkiyas
